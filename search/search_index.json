{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"A utility with a \"ping\" like interface to ping tcp ports and http/https services. Background \u00b6 This utility was written to simplify troubleshooting network issues related to talking to network services. Install \u00b6 To install serviceping, first make sure you are running Python 3.6+, then simply: Command pip3 install serviceping Usage \u00b6 Serviceping provides a command line interface that operates like the ping command but instead of using icmp packets to check for a response from a host. It can perform a tcp network connection to a port on a host or a http or https get request to check a url on a host. Since tcp and http requests require multiple operations. Each request performs all of the operations end to end for each request. The serviceping command adds a -d flag that will show timings for the different stages the ping request. The serviceping command line usage information\" usage : serviceping [- h ] [- c COUNT ] [- i INTERVAL ] [- d ] destination [ destination ...] positional arguments : destination Destination host or URL optional arguments : - h , -- help show this help message and exit - c COUNT Number of pings to send - i INTERVAL Ping interval - d Show timings for the entire connection Examples \u00b6 Ping port 80 (http) on www.yahoo.com \u00b6 By pinging www.yahoo.com via http (port 80), we can clearly see the multiple hosts responding and the latency of each request. $ serviceping www.yahoo.com SERVICEPING www.yahoo.com:80 (98.139.180.149:80). from www.yahoo.com:80 (98.139.183.24:80): time=2.46 ms from www.yahoo.com:80 (98.139.180.149:80): time=2.43 ms --- www.yahoo.com ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1704.0ms rtt min/avg/max/dev = 2.43/2.44/2.46/4.00 ms $ Ping port 4443 (https) on www.yahoo.com \u00b6 Serviceping can also connect to other ports such as the ssl port (443). $ serviceping www.yahoo.com:443 SERVICEPING www.yahoo.com:443 (98.139.183.24:443). from www.yahoo.com:443 (98.139.180.149:443): time=2.89 ms from www.yahoo.com:443 (98.139.180.149:443): time=2.81 ms --- www.yahoo.com ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1744.0ms rtt min/avg/max/dev = 2.81/2.85/2.89/6.08 ms $ Pinging a URL instead of the port \u00b6 The serviceping command can also send requests to a url. If a URL is specified, it will perform an http or https get request and show the response, which is useful when hosts are doing unexpected things in a dns rotation or behind a reverse proxy or vip. In this example we specify a url of http://cnn.com/ $ serviceping http://cnn.com/ SERVICEPING cnn.com:80 (157.166.255.18:80). 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=87.14 ms 1448 bytes from cnn.com:80 (157.166.226.25:80):response=200 time=64.82 ms 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=62.98 ms 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=78.30 ms --- cnn.com ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 4372.0ms rtt min/avg/max/dev = 62.98/73.31/87.14/56.00 ms $ The output shows that two hosts are responding to this request, and that they are returning different amounts of data in their responses. Pinging a URL with timings \u00b6 The detailed timing flag adds timings for each step of each request, which is useful for determining the causes of latency issues or errors. Here we are doing the previous example with detailed timings. $ serviceping -d http://cnn.com/ SERVICEPING cnn.com:80 (157.166.255.19:80). 1386 bytes from cnn.com:80 (157.166.255.19:80):response=200 dns=0.21ms connect=68.36ms request=130.02ms all=198.73ms 1386 bytes from cnn.com:80 (157.166.226.25:80):response=200 dns=0.30ms connect=66.72ms request=101.07ms all=168.20ms 1500 bytes from cnn.com:80 (157.166.255.18:80):response=200 dns=0.30ms connect=123.94ms request=203.08ms all=327.43ms 1386 bytes from cnn.com:80 (157.166.226.26:80):response=200 dns=0.28ms connect=68.32ms request=87.94ms all=156.69ms --- cnn.com ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 5009.0ms rtt min/avg/max/dev = 156.69/212.76/327.43/138.24 ms $ Clearly, the host with address 157.166.255.18 is taking significantly longer to establish the tcp connection and handle the http request.","title":"Home"},{"location":"#background","text":"This utility was written to simplify troubleshooting network issues related to talking to network services.","title":"Background"},{"location":"#install","text":"To install serviceping, first make sure you are running Python 3.6+, then simply: Command pip3 install serviceping","title":"Install"},{"location":"#usage","text":"Serviceping provides a command line interface that operates like the ping command but instead of using icmp packets to check for a response from a host. It can perform a tcp network connection to a port on a host or a http or https get request to check a url on a host. Since tcp and http requests require multiple operations. Each request performs all of the operations end to end for each request. The serviceping command adds a -d flag that will show timings for the different stages the ping request. The serviceping command line usage information\" usage : serviceping [- h ] [- c COUNT ] [- i INTERVAL ] [- d ] destination [ destination ...] positional arguments : destination Destination host or URL optional arguments : - h , -- help show this help message and exit - c COUNT Number of pings to send - i INTERVAL Ping interval - d Show timings for the entire connection","title":"Usage"},{"location":"#examples","text":"","title":"Examples"},{"location":"#ping-port-80-http-on-wwwyahoocom","text":"By pinging www.yahoo.com via http (port 80), we can clearly see the multiple hosts responding and the latency of each request. $ serviceping www.yahoo.com SERVICEPING www.yahoo.com:80 (98.139.180.149:80). from www.yahoo.com:80 (98.139.183.24:80): time=2.46 ms from www.yahoo.com:80 (98.139.180.149:80): time=2.43 ms --- www.yahoo.com ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1704.0ms rtt min/avg/max/dev = 2.43/2.44/2.46/4.00 ms $","title":"Ping port 80 (http) on www.yahoo.com"},{"location":"#ping-port-4443-https-on-wwwyahoocom","text":"Serviceping can also connect to other ports such as the ssl port (443). $ serviceping www.yahoo.com:443 SERVICEPING www.yahoo.com:443 (98.139.183.24:443). from www.yahoo.com:443 (98.139.180.149:443): time=2.89 ms from www.yahoo.com:443 (98.139.180.149:443): time=2.81 ms --- www.yahoo.com ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1744.0ms rtt min/avg/max/dev = 2.81/2.85/2.89/6.08 ms $","title":"Ping port 4443 (https) on www.yahoo.com"},{"location":"#pinging-a-url-instead-of-the-port","text":"The serviceping command can also send requests to a url. If a URL is specified, it will perform an http or https get request and show the response, which is useful when hosts are doing unexpected things in a dns rotation or behind a reverse proxy or vip. In this example we specify a url of http://cnn.com/ $ serviceping http://cnn.com/ SERVICEPING cnn.com:80 (157.166.255.18:80). 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=87.14 ms 1448 bytes from cnn.com:80 (157.166.226.25:80):response=200 time=64.82 ms 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=62.98 ms 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=78.30 ms --- cnn.com ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 4372.0ms rtt min/avg/max/dev = 62.98/73.31/87.14/56.00 ms $ The output shows that two hosts are responding to this request, and that they are returning different amounts of data in their responses.","title":"Pinging a URL instead of the port"},{"location":"#pinging-a-url-with-timings","text":"The detailed timing flag adds timings for each step of each request, which is useful for determining the causes of latency issues or errors. Here we are doing the previous example with detailed timings. $ serviceping -d http://cnn.com/ SERVICEPING cnn.com:80 (157.166.255.19:80). 1386 bytes from cnn.com:80 (157.166.255.19:80):response=200 dns=0.21ms connect=68.36ms request=130.02ms all=198.73ms 1386 bytes from cnn.com:80 (157.166.226.25:80):response=200 dns=0.30ms connect=66.72ms request=101.07ms all=168.20ms 1500 bytes from cnn.com:80 (157.166.255.18:80):response=200 dns=0.30ms connect=123.94ms request=203.08ms all=327.43ms 1386 bytes from cnn.com:80 (157.166.226.26:80):response=200 dns=0.28ms connect=68.32ms request=87.94ms all=156.69ms --- cnn.com ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 5009.0ms rtt min/avg/max/dev = 156.69/212.76/327.43/138.24 ms $ Clearly, the host with address 157.166.255.18 is taking significantly longer to establish the tcp connection and handle the http request.","title":"Pinging a URL with timings"},{"location":"changelog/","text":"","title":"Changelog"},{"location":"examples/","text":"Ping port 80 (http) on www.yahoo.com \u00b6 By pinging www.yahoo.com via http (port 80), we can clearly see the multiple hosts responding and the latency of each request. $ serviceping www.yahoo.com SERVICEPING www.yahoo.com:80 (98.139.180.149:80). from www.yahoo.com:80 (98.139.183.24:80): time=2.46 ms from www.yahoo.com:80 (98.139.180.149:80): time=2.43 ms --- www.yahoo.com ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1704.0ms rtt min/avg/max/dev = 2.43/2.44/2.46/4.00 ms $ Ping port 4443 (https) on www.yahoo.com \u00b6 Serviceping can also connect to other ports such as the ssl port (443). $ serviceping www.yahoo.com:443 SERVICEPING www.yahoo.com:443 (98.139.183.24:443). from www.yahoo.com:443 (98.139.180.149:443): time=2.89 ms from www.yahoo.com:443 (98.139.180.149:443): time=2.81 ms --- www.yahoo.com ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1744.0ms rtt min/avg/max/dev = 2.81/2.85/2.89/6.08 ms $ Pinging a URL instead of the port \u00b6 The serviceping command can also send requests to a url. If a URL is specified, it will perform an http or https get request and show the response, which is useful when hosts are doing unexpected things in a dns rotation or behind a reverse proxy or vip. In this example we specify a url of http://cnn.com/ $ serviceping http://cnn.com/ SERVICEPING cnn.com:80 (157.166.255.18:80). 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=87.14 ms 1448 bytes from cnn.com:80 (157.166.226.25:80):response=200 time=64.82 ms 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=62.98 ms 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=78.30 ms --- cnn.com ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 4372.0ms rtt min/avg/max/dev = 62.98/73.31/87.14/56.00 ms $ The output shows that two hosts are responding to this request, and that they are returning different amounts of data in their responses. Pinging a URL with timings \u00b6 The detailed timing flag adds timings for each step of each request, which is useful for determining the causes of latency issues or errors. Here we are doing the previous example with detailed timings. $ serviceping -d http://cnn.com/ SERVICEPING cnn.com:80 (157.166.255.19:80). 1386 bytes from cnn.com:80 (157.166.255.19:80):response=200 dns=0.21ms connect=68.36ms request=130.02ms all=198.73ms 1386 bytes from cnn.com:80 (157.166.226.25:80):response=200 dns=0.30ms connect=66.72ms request=101.07ms all=168.20ms 1500 bytes from cnn.com:80 (157.166.255.18:80):response=200 dns=0.30ms connect=123.94ms request=203.08ms all=327.43ms 1386 bytes from cnn.com:80 (157.166.226.26:80):response=200 dns=0.28ms connect=68.32ms request=87.94ms all=156.69ms --- cnn.com ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 5009.0ms rtt min/avg/max/dev = 156.69/212.76/327.43/138.24 ms $ Clearly, the host with address 157.166.255.18 is taking significantly longer to establish the tcp connection and handle the http request.","title":"Examples"},{"location":"examples/#ping-port-80-http-on-wwwyahoocom","text":"By pinging www.yahoo.com via http (port 80), we can clearly see the multiple hosts responding and the latency of each request. $ serviceping www.yahoo.com SERVICEPING www.yahoo.com:80 (98.139.180.149:80). from www.yahoo.com:80 (98.139.183.24:80): time=2.46 ms from www.yahoo.com:80 (98.139.180.149:80): time=2.43 ms --- www.yahoo.com ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1704.0ms rtt min/avg/max/dev = 2.43/2.44/2.46/4.00 ms $","title":"Ping port 80 (http) on www.yahoo.com"},{"location":"examples/#ping-port-4443-https-on-wwwyahoocom","text":"Serviceping can also connect to other ports such as the ssl port (443). $ serviceping www.yahoo.com:443 SERVICEPING www.yahoo.com:443 (98.139.183.24:443). from www.yahoo.com:443 (98.139.180.149:443): time=2.89 ms from www.yahoo.com:443 (98.139.180.149:443): time=2.81 ms --- www.yahoo.com ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1744.0ms rtt min/avg/max/dev = 2.81/2.85/2.89/6.08 ms $","title":"Ping port 4443 (https) on www.yahoo.com"},{"location":"examples/#pinging-a-url-instead-of-the-port","text":"The serviceping command can also send requests to a url. If a URL is specified, it will perform an http or https get request and show the response, which is useful when hosts are doing unexpected things in a dns rotation or behind a reverse proxy or vip. In this example we specify a url of http://cnn.com/ $ serviceping http://cnn.com/ SERVICEPING cnn.com:80 (157.166.255.18:80). 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=87.14 ms 1448 bytes from cnn.com:80 (157.166.226.25:80):response=200 time=64.82 ms 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=62.98 ms 1500 bytes from cnn.com:80 (157.166.255.19:80):response=200 time=78.30 ms --- cnn.com ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 4372.0ms rtt min/avg/max/dev = 62.98/73.31/87.14/56.00 ms $ The output shows that two hosts are responding to this request, and that they are returning different amounts of data in their responses.","title":"Pinging a URL instead of the port"},{"location":"examples/#pinging-a-url-with-timings","text":"The detailed timing flag adds timings for each step of each request, which is useful for determining the causes of latency issues or errors. Here we are doing the previous example with detailed timings. $ serviceping -d http://cnn.com/ SERVICEPING cnn.com:80 (157.166.255.19:80). 1386 bytes from cnn.com:80 (157.166.255.19:80):response=200 dns=0.21ms connect=68.36ms request=130.02ms all=198.73ms 1386 bytes from cnn.com:80 (157.166.226.25:80):response=200 dns=0.30ms connect=66.72ms request=101.07ms all=168.20ms 1500 bytes from cnn.com:80 (157.166.255.18:80):response=200 dns=0.30ms connect=123.94ms request=203.08ms all=327.43ms 1386 bytes from cnn.com:80 (157.166.226.26:80):response=200 dns=0.28ms connect=68.32ms request=87.94ms all=156.69ms --- cnn.com ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 5009.0ms rtt min/avg/max/dev = 156.69/212.76/327.43/138.24 ms $ Clearly, the host with address 157.166.255.18 is taking significantly longer to establish the tcp connection and handle the http request.","title":"Pinging a URL with timings"},{"location":"install/","text":"To install serviceping, first make sure you are running Python 3.6+, then simply: Command pip3 install serviceping","title":"Install"},{"location":"usage/","text":"Serviceping provides a command line interface that operates like the ping command but instead of using icmp packets to check for a response from a host. It can perform a tcp network connection to a port on a host or a http or https get request to check a url on a host. Since tcp and http requests require multiple operations. Each request performs all of the operations end to end for each request. The serviceping command adds a -d flag that will show timings for the different stages the ping request. The serviceping command line usage information\" usage : serviceping [- h ] [- c COUNT ] [- i INTERVAL ] [- d ] destination [ destination ...] positional arguments : destination Destination host or URL optional arguments : - h , -- help show this help message and exit - c COUNT Number of pings to send - i INTERVAL Ping interval - d Show timings for the entire connection","title":"Usage"}]}